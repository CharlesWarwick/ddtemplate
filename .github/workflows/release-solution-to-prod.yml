name: release-solution-to-prod
# prepare for releasing to prod:
#   convert solution to managed (using a build PowerPlatform environment for the conversion)
#   upload the solution to the GitHub artifacts and deploy to the PROD environment

on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: "name of the solution to publish to production"
        required: true
        default: DDBookings
        # DO NOT CHANGE ANY OF THE VALUES BELOW
      solution_shipping_folder:
        description: "folder name for staging the exported solution *do not change*"
        required: true
        default: out/ship/
      solution_outbound_folder:
        description: "staging the unpacked solution folder before check-in *do not change*"
        required: true
        default: out/solutions/
      solution_source_folder:
        description: "folder name to be created and checked in *do not change*"
        required: true
        default: solutions/
      solution_release_folder:
        description: "folder where the released binaries are going to be hosted *do not change*"
        required: true
        default: out/release
  release:
    types: [created]

env:
  # UPDATE ALL THE VALUES BELOW TO MATCH YOUR TENANCY
  

  # DDportal
  # BUILD_ENVIRONMENT_URL: 'https://org0cd36248.crm6.dynamics.com/' # Development 
  # PRODUCTION_ENVIRONMENT_URL: 'https://orgcd6fa5b6.crm6.dynamics.com/' # DeskDirectorAU1
  # CLIENT_ID: "72f71670-7812-4e3b-a877-f5565eadf650" # Changed to DdPortal Tenancy
  # TENANT_ID: "e021ec19-1a78-4d24-9271-9d7a522a8531" # DdAutomation User
  # secrets.DdPortalPowerPlatformSpn
    
  # DeskDirector
  BUILD_ENVIRONMENT_URL: 'https://ddbuild.crm6.dynamics.com/' 
  PRODUCTION_ENVIRONMENT_URL: 'https://ddprod.crm6.dynamics.com/' 
  CLIENT_ID: '8dfeb9fb-529d-44ba-a2ee-464ad1bd2332' #DeskDirector
  TENANT_ID: '342f0676-bb50-446a-bd9d-5d86f49e3696'  #DeskDirector
  # secrets.POWERPLATFORMSPN


jobs:
  convert-to-managed:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Pack solution
        uses: microsoft/powerplatform-actions/pack-solution@0.4.0
        with:
          solution-folder: ${{ github.event.inputs.solution_source_folder}}/${{ github.event.inputs.solution_name }}
          solution-file: ${{ github.event.inputs.solution_outbound_folder}}/${{ github.event.inputs.solution_name }}.zip
          solution-type: Unmanaged

      - name: Import solution as unmanaged to build env
        uses: microsoft/powerplatform-actions/import-solution@0.4.0
        with:
          environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
          app-id: ${{env.CLIENT_ID}}
          client-secret: ${{ secrets.POWERPLATFORMSPN }}
          tenant-id: ${{env.TENANT_ID}}
          solution-file: ${{ github.event.inputs.solution_outbound_folder}}/${{ github.event.inputs.solution_name }}.zip
          force-overwrite: true
          publish-changes: true

      - name: Export solution as managed
        uses: microsoft/powerplatform-actions/export-solution@0.4.0
        with:
          environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
          app-id: ${{env.CLIENT_ID}}
          client-secret: ${{ secrets.POWERPLATFORMSPN }}
          tenant-id: ${{env.TENANT_ID}}
          solution-name: ${{ github.event.inputs.solution_name }}
          managed: true
          solution-output-file: ${{ github.event.inputs.solution_shipping_folder}}/${{ github.event.inputs.solution_name }}.zip

      - name: Upload the ready to ship solution to GH artifact store
        uses: actions/upload-artifact@v2
        with:
          name: managedSolutions
          path: ${{ github.event.inputs.solution_shipping_folder}}/${{ github.event.inputs.solution_name }}.zip

  release-to-staging:
    needs: [convert-to-managed]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Fetch the ready to ship solution from GH artifact store
        uses: actions/download-artifact@v2
        with:
          name: managedSolutions
          path: ${{ github.event.inputs.solution_release_folder}}
      - name: Import solution to prod env
        uses: microsoft/powerplatform-actions/import-solution@0.4.0
        with:
          environment-url: ${{env.PRODUCTION_ENVIRONMENT_URL}}
          app-id: ${{env.CLIENT_ID}}
          client-secret: ${{ secrets.POWERPLATFORMSPN }}
          tenant-id: ${{env.TENANT_ID}}
          solution-file: ${{ github.event.inputs.solution_release_folder}}/${{ github.event.inputs.solution_name }}.zip
          force-overwrite: true
          publish-changes: true
